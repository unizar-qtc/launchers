#!/bin/bash

# File: INTERACTIVE_launcher
# Description : INTERACTIVE session launcher
# Version : 1.4
# Last update : 23-09-2024

#######################################################################
##                        INTERACTIVE_launcher                       ##
#######################################################################
# Launcher for interactive sessions on calculation nodes
#
# USAGE:   INTERACTIVE_launcher [--nodes #nodes] [--nodelist node_name]
#           [-c #cores] [-m #memory] [-g #gpus] [-q queue] [-a account]
#                                                 [--dry] [-h | --help]
#
# [*] options are optional
#

##  DEFAULT VARIABLES  ################################################

  __version__='1.4'

  nodes_def=1                       # min number of nodes
  cores_def=8                       # number of cores / parallel enviroment
  memory_def=''                     # RAM memory (100MW = 800MB)
  gpus_def=0                        # number of GPU cards

  queue_def='thin'                  # name of queue to submit
  account_def='molcat'              # name of account

  msgf=$HOME/msg                    # path for output/error messages
  dry_flg=false                     # dry run: display command but do not launch [true, false]

#######################################################################

## Checks existence of folders or create them
if [[ ! -d $msgf ]]; then mkdir $msgf; fi

## Checks for optional arguments if any
while [ $# -gt 0 ]; do     # until no more arguments
  arg="$1"
  shift
  case $arg in
    -h|--help)          # print help and exit
      echo "------------  INTERACTIVE_launcher  ------------"
      echo "          INTERACTIVE SESSION LAUNCHER"
      echo
      echo "Version: $__version__"
      echo
      echo "USAGE:   INTERACTIVE_launcher [options]"
      echo
      echo "OPTIONS:"
      echo " --nodes  <#nodes>                 min number of nodes (def: $nodes_def)"
      echo " --nodelist  <node_name>           name of specific nodes, can be a comma separated list (def: all)"
      echo " -c | --cores  <#cores>            number of cores (def: $cores_def)"
      echo " -m | --memory  <memory>           amount of RAM memory (def: all available)"
      echo " -g | --gpus  <#gpus>              number of GPUs (def: $gpus_def)"
      echo " -q | --queue  <queue>             queue name (def: $queue_def)"
      echo " -a | --account <account>          account name (def: $account_def)"
      echo " --dry                             dry run: display command but do not launch"
      echo " -h | --help                       print this help and exit"
      echo
      exit ;;
    --nodes)
      nodes=$1
      shift
      ;;
    --nodelist)
      nodelist="--nodelist=$1"
      shift
      ;;
    -c|--cores)
      cores=$1
      shift
      ;;
    -m|--memory)
      memory="--mem=$1"
      shift
      ;;
    -g|--gpus)
      gpus=$1
      shift
      ;;
    -q|--queue)
      queue=$1
      shift
      ;;
    -a|--account)
      account=$1
      shift
      ;;
    --dry)              # dry run
      dry_flg=true
      ;;
    *)                  # error option
      echo "ERROR: Wrong option '$arg'"
      exit ;;
  esac
done

## default values if not specified in input
nodes=${nodes:=$nodes_def}
cores=${cores:=$cores_def}
memory=${memory:=$memory_def}
gpus=${gpus:=$gpus_def}
queue=${queue:=$queue_def}
account=${account:=$account_def}

## build launch commands
executable="srun \
              -J 'INTER' \
              -p $queue \
              -A $account \
              -N $nodes \
              --ntasks-per-node=$cores \
              --gpus=$gpus \
              $memory \
              $nodelist"
executable=$executable" --pty bash"

## launch
if [ "$dry_flg" == "true" ]; then
  echo $executable
else
  $executable
fi
