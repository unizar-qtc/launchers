#!/bin/bash

# File: SCRIPT_launcher
# Description : generic script launcher
# Version : 1.1
# Last update : 09-04-2021

#######################################################################
##                          SCRIPT_launcher                          ##
#######################################################################
# Launcher for generic scripts on calculation nodes through queues
#
# USAGE:                       SCRIPT_launcher [-c #cores] [-m #memory]
#                                                 [-g #gpus] [-q queue]
#                                                    [-j] [-h | --help]
#                                                           <script.sh>
#
# [*] options are optional, <*> files are mandatory
#

##  DEFAULT VARIABLES  ################################################

  __version__='1.1'

  nodes_def=1                       # number of nodes (only of SLURM)
  cores_def=1                       # number of cores / parallel enviroment
  memory_def='2GB'                  # RAM memory (100MW = 800MB)
  gpus_def=0                        # number of GPU cards

  queue_sge='BIFIZCAM'              # name of queue to submit
  queue_slurm='test'                # name of queue to submit

  job_flg=false                     # display command but do not launch [true, false]

#######################################################################

## Checks for optional arguments if any
while [ ${1:0:1} == "-" ]; do     # until arguments does not start with '-'
  arg="$1"
  shift
  case $arg in
    -h|--help)          # print help and exit
      echo "--------------  SCRIPT_launcher  --------------"
      echo "            GENERIC SCRIPT LAUNCHER"
      echo
      echo "Version: $__version__"
      echo
      echo "USAGE:   SCRIPT_launcher [options]"
      echo
      echo "OPTIONS:"
      echo " --nodes  <#nodes>                 number of nodes (def: $nodes_def)"
      echo " -c | --cores  <#cores>            number of cores (def: $cores_def)"
      echo " -m | --memory  <memory>           amount of RAM memory (def: $memory_def)"
      echo " -g | --gpus  <#gpus>              number of GPUs (def: $gpus_def)"
      echo " -q | --queue  <queue>             queue name (SGE: $queue_sge / SLURM: $queue_slurm)"
      echo " -j                                display command but do not launch"
      echo " -h | --help                       print this help and exit"
      echo
      echo "INPUT:"
      echo " <script.sh> [arg]                 shell script file to be launched"
      echo "                                   must be the last argument, can be followed by arguments"
      echo "                                   stdout/stderr will be redirected to 'script.out'"
      exit ;;
    --nodes)
      nodes=$1
      shift
      ;;
    -c|--cores)
      cores=$1
      shift
      ;;
    -m|--memory)
      memory=$1
      shift
      ;;
    -g|--gpus)
      gpus=$1
      shift
      ;;
    -q|--queue)
      queue_sge=$1
      queue_slurm=$1
      shift
      ;;
    -j)                 # display command but do not submit
      job_flg=true
      ;;
    *)                  # error option
      echo "ERROR: Wrong option '$arg'"
      exit ;;
  esac
done

## default values if not specified in input
nodes=${nodes:=$nodes_def}
cores=${cores:=$cores_def}
memory=${memory:=$memory_def}
gpus=${gpus:=$gpus_def}

## read script file from input
file=$1
name=${file%.*}       # name of input file without extension

# check name starts with a digit
if [[ ${name} =~ ^[0-9] ]]; then
  echo "ERROR: '${file}' name can not start with a digit"
  exit 1
fi

## build launch commands
# SGE
executable_sge="qsub \
                -N $name \
                -e $PWD/${name}.out \
                -o $PWD/${name}.out \
                -q $queue_sge"
if [ "$cores" != '1' ]; then        # single core case
  executable_sge=$executable_sge" -pe mp$cores $cores"
fi
# SLURM
executable_slurm="sbatch \
                  -J $name \
                  -e $PWD/${name}.out \
                  -o $PWD/${name}.out \
                  -p $queue_slurm \
                  -N $nodes \
                  --ntasks-per-node=$cores \
                  --mem=$memory"
if [ "$queue_slurm" == 'gpu' ]; then
  executable_slurm=$executable_slurm" --gres=gpu:$gpus"
fi

## detect queue manager
#TODO: make independent from BIFI hostnames (memento/cierzo)
case $HOSTNAME in
  'memento')
    executable=$executable_sge
    ;;
  'cierzo')
    executable=$executable_slurm
    ;;
  *)
    echo "ERROR: Unknown '$HOSTNAME' hostname. Please, execute in memento/cierzo."
    ;;
esac

## add script
executable=$executable" $@"

## launch
if [ "$job_flg" == "true" ]; then
  echo $executable
else
  $executable
fi
